
import os
import logging
import subprocess
import numpy as np
from tqdm import tqdm

def delete_i64_files():
    pass


############################################### 
# 调用IDApro反汇编
# IDApro不支持多进程
# Flag = False, PE文件分布在多个子文件夹中
# Flag = True， PE文件都在一个文件夹下
# reference: Reference: https://blog.csdn.net/weixin_43872455/article/details/128265449
###############################################
def do(pe_file_dir, asm_save_dir, ida_path, flag = False):
    
    fail_file_list = []
    fail_file_list = np.array(fail_file_list)
    
    os.makedirs(asm_save_dir, exist_ok=True)
    if flag == True:
        pe_file_list = os.listdir(pe_file_dir)
        for pe_file_name in tqdm(pe_file_list, ncols=100):
            pe_file_path = os.path.join(pe_file_dir, pe_file_name)
            asm_save_path = os.path.join(asm_save_dir, os.path.splitext(pe_file_name)[0] + ".ASM")
            i64_save_path = os.path.join(asm_save_dir, os.path.splitext(pe_file_name)[0] + ".i64")
            if os.path.exists(asm_save_path):
                logging.debug(f"[+]{pe_file_name} already exist")
                continue

            msg = subprocess.call([ida_path, f"-o{asm_save_dir}", "-b", "-B",  pe_file_path])
            # print(type(msg))
            if msg == 0: # 反汇编成功
                if os.path.exists(i64_save_path):
                    os.remove(i64_save_path)
                logging.debug(f"[+]{pe_file_name} success {msg} and .i64 removed!")
            else: # 反汇编失败
                fail_file_list = np.append(fail_file_list, pe_file_name)
                logging.debug(f"[-]{pe_file_name} error {msg}")
                # 创建一个空asm文件
                with open(asm_save_path, 'w'):
                    pass  
        # logging.info(f"failed list: {fail_file_list}")
        return fail_file_list
    
    pe_dir_list = os.listdir(pe_file_dir)
    for dir in tqdm(pe_dir_list, ncols=100):
        pe_dir = os.path.join(pe_file_dir, dir)
        pe_file_list = os.listdir(pe_dir)
        asm_dir = os.path.join(asm_save_dir, dir)
        logging.debug(asm_dir)
        if not os.path.exists(asm_dir):
            os.mkdir(asm_dir)
        for pe_file_name in pe_file_list:
            pe_file_path = os.path.join(pe_dir, pe_file_name)
            asm_save_path = os.path.join(asm_dir, pe_file_name + ".ASM")
            i64_save_path = os.path.join(asm_dir, pe_file_name + ".i64")
            logging.debug(i64_save_path)
            if os.path.exists(asm_save_path):
                logging.debug(f"[+]{pe_file_name} already exist")
                continue

            msg = subprocess.call([ida_path, f"-o{asm_dir}", "-b", "-B",  pe_file_path])
            
            if msg == 0 and os.path.exists(i64_save_path):
                
                os.remove(i64_save_path)
                logging.debug(f"[+]{pe_file_name} success {msg} and .i64 removed!")
            else:
                fail_file_list = np.append(fail_file_list, pe_file_name)
                logging.debug(f"[-]{pe_file_name} error {msg}")
                # 创建一个空asm文件
                with open(asm_save_path, 'w'):
                    pass  
        logging.info(f"failed list: {fail_file_list}")
    return fail_file_list